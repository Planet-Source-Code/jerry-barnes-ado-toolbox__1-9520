VERSION 5.00
Object = "{F9043C88-F6F2-101A-A3C9-08002B2F49FB}#1.2#0"; "COMDLG32.OCX"
Object = "{CDE57A40-8B86-11D0-B3C6-00A0C90AEA82}#1.0#0"; "MSDATGRD.OCX"
Begin VB.Form frmMain 
   Caption         =   "ADO Toolbox"
   ClientHeight    =   7830
   ClientLeft      =   165
   ClientTop       =   735
   ClientWidth     =   7530
   Icon            =   "frmMain.frx":0000
   LinkTopic       =   "Form1"
   ScaleHeight     =   7830
   ScaleWidth      =   7530
   StartUpPosition =   3  'Windows Default
   Begin VB.CommandButton cmdExit 
      Caption         =   "Exit"
      Height          =   495
      Left            =   4800
      TabIndex        =   16
      ToolTipText     =   "Close the program."
      Top             =   0
      Width           =   1215
   End
   Begin MSDataGridLib.DataGrid DataGrid1 
      Height          =   1695
      Left            =   0
      TabIndex        =   15
      ToolTipText     =   "This is the data generated by the code."
      Top             =   6000
      Visible         =   0   'False
      Width           =   7455
      _ExtentX        =   13150
      _ExtentY        =   2990
      _Version        =   393216
      HeadLines       =   1
      RowHeight       =   15
      BeginProperty HeadFont {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
         Name            =   "MS Sans Serif"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
         Name            =   "MS Sans Serif"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ColumnCount     =   2
      BeginProperty Column00 
         DataField       =   ""
         Caption         =   ""
         BeginProperty DataFormat {6D835690-900B-11D0-9484-00A0C91110ED} 
            Type            =   0
            Format          =   ""
            HaveTrueFalseNull=   0
            FirstDayOfWeek  =   0
            FirstWeekOfYear =   0
            LCID            =   1033
            SubFormatType   =   0
         EndProperty
      EndProperty
      BeginProperty Column01 
         DataField       =   ""
         Caption         =   ""
         BeginProperty DataFormat {6D835690-900B-11D0-9484-00A0C91110ED} 
            Type            =   0
            Format          =   ""
            HaveTrueFalseNull=   0
            FirstDayOfWeek  =   0
            FirstWeekOfYear =   0
            LCID            =   1033
            SubFormatType   =   0
         EndProperty
      EndProperty
      SplitCount      =   1
      BeginProperty Split0 
         BeginProperty Column00 
         EndProperty
         BeginProperty Column01 
         EndProperty
      EndProperty
   End
   Begin VB.CommandButton cmdEditSQL 
      Caption         =   "Edit SQL String"
      Height          =   495
      Left            =   1200
      TabIndex        =   14
      ToolTipText     =   "Click here to edit the SQL string."
      Top             =   0
      Width           =   1215
   End
   Begin VB.TextBox txtSQL 
      Height          =   285
      Left            =   1080
      Locked          =   -1  'True
      TabIndex        =   13
      ToolTipText     =   "The source for your database."
      Top             =   1680
      Width           =   6375
   End
   Begin VB.TextBox txtOpen 
      Height          =   1935
      Left            =   0
      MultiLine       =   -1  'True
      ScrollBars      =   2  'Vertical
      TabIndex        =   10
      ToolTipText     =   "Cut and paste this into your program."
      Top             =   3960
      Width           =   7455
   End
   Begin VB.Frame fraProvider 
      Caption         =   "Provider"
      Height          =   1035
      Left            =   3600
      TabIndex        =   6
      ToolTipText     =   "Pick the database provider you want to generate code with.  Note, in order to open an Access 2000 database, select Jet 4.0."
      Top             =   600
      Width           =   1935
      Begin VB.OptionButton optProvider 
         Caption         =   "Jet 4.0"
         Height          =   375
         Index           =   1
         Left            =   360
         TabIndex        =   8
         Top             =   600
         Width           =   1215
      End
      Begin VB.OptionButton optProvider 
         Caption         =   "Jet 3.51"
         Height          =   375
         Index           =   0
         Left            =   360
         TabIndex        =   7
         Top             =   240
         Value           =   -1  'True
         Width           =   1215
      End
   End
   Begin VB.CommandButton cmdClear 
      Caption         =   "Clear"
      Height          =   495
      Left            =   3600
      TabIndex        =   5
      ToolTipText     =   "Clear the current code out of the controls."
      Top             =   0
      Width           =   1215
   End
   Begin VB.CommandButton cmdGenerate 
      Caption         =   "Generate Code"
      Height          =   495
      Left            =   2400
      TabIndex        =   4
      ToolTipText     =   "Click here to generate the code."
      Top             =   0
      Width           =   1215
   End
   Begin VB.ListBox lstFields 
      Height          =   1035
      Left            =   1920
      TabIndex        =   3
      Top             =   600
      Width           =   1575
   End
   Begin VB.TextBox txtDeclarations 
      Height          =   1215
      Left            =   0
      MultiLine       =   -1  'True
      TabIndex        =   2
      ToolTipText     =   "Cut and paste this in the declarations section."
      Top             =   2400
      Width           =   7455
   End
   Begin VB.ListBox lstTables 
      Height          =   1035
      Left            =   0
      TabIndex        =   1
      ToolTipText     =   "Select a table that you need to generate code for."
      Top             =   600
      Width           =   1815
   End
   Begin VB.CommandButton cmdPickDataBase 
      Caption         =   "Open Database"
      Height          =   495
      Left            =   0
      TabIndex        =   0
      ToolTipText     =   "Click here to select a database."
      Top             =   0
      Width           =   1215
   End
   Begin MSComDlg.CommonDialog dlgCommon 
      Left            =   5640
      Top             =   720
      _ExtentX        =   847
      _ExtentY        =   847
      _Version        =   393216
   End
   Begin VB.Label Label4 
      Caption         =   "SQL String:"
      Height          =   255
      Left            =   0
      TabIndex        =   12
      Top             =   1680
      Width           =   975
   End
   Begin VB.Label Label2 
      Caption         =   "Opening Code"
      Height          =   255
      Left            =   0
      TabIndex        =   11
      Top             =   3720
      Width           =   1455
   End
   Begin VB.Label Label1 
      Caption         =   "Declarations"
      Height          =   255
      Left            =   0
      TabIndex        =   9
      Top             =   2040
      Width           =   1215
   End
   Begin VB.Menu mnuFile 
      Caption         =   "&File"
      Begin VB.Menu mnuFileExit 
         Caption         =   "&Exit"
      End
   End
   Begin VB.Menu mnuHelp 
      Caption         =   "&Help"
      Begin VB.Menu mnuHelpAbout 
         Caption         =   "&About"
      End
   End
End
Attribute VB_Name = "frmMain"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Option Explicit

Dim connConnection                  As ADODB.Connection
Dim rsRecordset                     As ADODB.Recordset
Dim mstrDatabasePath                As String
Dim mstrProvider                    As String
Dim mstrCheckForDatabase            As String
Dim mstrDataSource                  As String
Dim mstrConnectionString            As String
Dim mstrRecordSet                   As String
Dim mstrDatabaseName                As String
Dim mstrTableName                   As String
Dim mstrConnectionObject            As String
Dim mstrRecordSetObject             As String
Dim mstrFieldName                   As String
Dim mstrSQL                         As String
Const mstrAccessProvider351         As String = "Provider= Microsoft.Jet.OLEDB.3.51;"
Const mstrAccessProvider40          As String = "Provider=Microsoft.Jet.OLEDB.4.0;"


Private Sub cmdClear_Click()
    
    cmdPickDataBase.Enabled = True
    optProvider(0).Enabled = True
    optProvider(1).Enabled = True
    'Allow the user to choose a provider and a database.
    
    txtDeclarations.Text = ""
    txtOpen.Text = ""
    lstTables.Clear
    lstFields.Clear
    txtSQL.Text = ""
    DataGrid1.Visible = False
    'Clear the controls and hide the grid.
End Sub

Private Sub cmdEditSQL_Click()
    
    If cmdEditSQL.Caption = "Edit SQL String" Then
        cmdEditSQL.Caption = "Save SQL String"
        txtSQL.Locked = False
        txtSQL.SetFocus
        cmdGenerate.Enabled = False
        'If the caption is Edit, then allow the user to edit and
        'give the option to save.  Do allow code to be generated
        'during edit.
        
    ElseIf cmdEditSQL.Caption = "Save SQL String" Then
        cmdEditSQL.Caption = "Edit SQL String"
        txtSQL.Locked = True
        mstrSQL = txtSQL.Text
        cmdGenerate.Enabled = True
        'If the caption is Save the allow the user to save
        'and prepare for future edit.  Allow code to be generated
        'after save.
        
    End If
End Sub

Private Sub cmdExit_Click()
    
    Set connConnection = Nothing
    Set rsRecordset = Nothing
    End
End Sub

Private Sub cmdGenerate_Click()
    Dim intI As Integer
    Dim strHold As String
    Dim strtest As String
    
    cmdGenerate.Enabled = False
    'Do not allow code generation again until clear is selected.
    
    mstrDatabaseName = Left(mstrDatabasePath, Len(mstrDatabasePath) - 4)
    strHold = ""
    strtest = ""
    
    Do Until strtest = "\"
        strHold = Right(mstrDatabaseName, 1) & strHold
        strtest = Right(mstrDatabaseName, 1)
        mstrDatabaseName = Left(mstrDatabaseName, Len(mstrDatabaseName) - 1)
    Loop
    'Cut away the string until the database name is left.
    
    mstrConnectionObject = "conn" & Right(strHold, Len(strHold) - 1)
    mstrDatabasePath = Left(mstrDatabasePath, Len(mstrDatabasePath) - Len(mstrDatabaseName) - 4)
    'Make connection object.
    
    Call WriteCode
    'Generate the code.
    
    Call LoadGrid
    'View the result of the data.
    
    cmdEditSQL.Enabled = False
    'Do not allow edits after generation.
End Sub

Private Sub LoadGrid()
            
    On Error GoTo HandleErrors:
    
    Set rsRecordset = New ADODB.Recordset
    rsRecordset.CursorType = adUseClient
    rsRecordset.LockType = adLockPessimistic
    rsRecordset.Source = mstrSQL
    rsRecordset.ActiveConnection = connConnection
    rsRecordset.Open
    'Open the recordset that was generated.
    
    Set DataGrid1.DataSource = rsRecordset
    DataGrid1.Visible = True
    'View the generated data
    Exit Sub
HandleErrors:
    MsgBox "An invalid attempt has been made to open a database." & _
        "  This action has been cancelled.  Please check your SQL" & _
        " statement", vbOKOnly, "Error"
    Call cmdClear_Click
    Exit Sub
End Sub

Private Sub WriteCode()
      
    '***********************************************************
    'Declarations
    '***********************************************************
    txtDeclarations.Text = "Dim WithEvents " & mstrConnectionObject & " as ADODB.Connection"
    txtDeclarations.Text = txtDeclarations.Text & vbCrLf
    txtDeclarations.Text = txtDeclarations.Text & "Dim WithEvents " & mstrRecordSetObject & " as ADODB.Recordset"
     
    '***********************************************************
    'Opening Code
    '***********************************************************
    
    txtOpen.Text = "Private Sub Open_" & mstrConnectionObject & " ()" & vbCrLf
    
    txtOpen.Text = txtOpen & "     Dim strConnect as String" & vbCrLf
    
    txtOpen.Text = txtOpen & "     strConnect = " & Chr(34) & mstrConnectionString & Chr(34) & vbCrLf
    
    txtOpen.Text = txtOpen & "     Set " & mstrConnectionObject & " = New ADODB.Connection" & vbCrLf
    txtOpen.Text = txtOpen & "     " & mstrConnectionObject & ".CursorLocation = adUseClient" & vbCrLf
     
    txtOpen.Text = txtOpen & "     " & mstrConnectionObject & ".Open " & _
         "strConnect" & vbCrLf & vbCrLf
        
    txtOpen.Text = txtOpen & "     Set " & mstrRecordSetObject & " = New ADODB.Recordset" & vbCrLf
    txtOpen.Text = txtOpen & "     " & mstrRecordSetObject & ".CursorType = adUseClient" & vbCrLf
    txtOpen.Text = txtOpen & "     " & mstrRecordSetObject & ".LockType = adLockPessimistic" & vbCrLf
    txtOpen.Text = txtOpen & "     " & mstrRecordSetObject & ".Source = " & _
        Chr(34) & mstrSQL & Chr(34) & vbCrLf
    txtOpen.Text = txtOpen & "     " & mstrRecordSetObject & ".ActiveConnection = " & mstrConnectionObject & vbCrLf
    txtOpen.Text = txtOpen & "     " & mstrRecordSetObject & ".Open" & vbCrLf
    
    txtOpen.Text = txtOpen & "End Sub" & vbCrLf & vbCrLf
    
    txtOpen.Text = txtOpen & "Private Sub Close_" & mstrConnectionObject & " ()" & vbCrLf
    txtOpen.Text = txtOpen & "     " & mstrConnectionObject & ".Close" & vbCrLf
    txtOpen.Text = txtOpen & "     Set " & mstrConnectionObject & " = Nothing" & vbCrLf
    txtOpen.Text = txtOpen & "End Sub"
End Sub

Private Sub cmdPickDataBase_Click()

Restart:
    On Error GoTo HandleErrors
    
     dlgCommon.DialogTitle = "Pick A Database"
    'Give the file selection window a title.
    
    dlgCommon.InitDir = App.Path
    'The file selection window will start in the
    'applications directory.
    
    dlgCommon.Filter = "All files (*.*)|*.*|Access files (*.mdb)|*.mdb"
    'Allow the user to view only Access files.
    
    dlgCommon.ShowOpen
    'Open the file selection window.
    
    mstrCheckForDatabase = Right(dlgCommon.FileName, 4)
    'Select the last four letters of the file selected.
    
    Select Case mstrCheckForDatabase
       Case vbNullString
            Exit Sub
            'Do not allow empty strings.
        Case ".mdb"
            mstrDatabasePath = dlgCommon.FileName
            'Assign the chosen file to the path string.
            
            cmdPickDataBase.Enabled = False
            'Do not allow the user to select another DB until
            'clear is clicked.
    Case Else
            MsgBox "The file chosen is not a database", , "Oops!"
            dlgCommon.FileName = ""
            GoTo Restart
    End Select
    
    mstrConnectionString = mstrProvider & "Data Source=" & _
        mstrDatabasePath
    'Make the connection string with the source and selected file.
    
    Set connConnection = New ADODB.Connection
    connConnection.CursorLocation = adUseClient
    connConnection.Open mstrConnectionString
    'Open the connection with the selected db.
    
    Set rsRecordset = connConnection.OpenSchema(adSchemaTables)
    
    Do Until rsRecordset.EOF
        If UCase(Left(rsRecordset!Table_Name, 4)) <> "MSYS" Then
            lstTables.AddItem rsRecordset!Table_Name
        End If
        rsRecordset.MoveNext
    Loop
    
    Exit Sub
    
HandleErrors:
    MsgBox "Error opening database.  Please try again.  Remember to select" & _
        " the appropriate provider", vbOKCancel, "Error"
    
    cmdPickDataBase.Enabled = True
    'Allow the user to try again.
    
    Exit Sub
End Sub

Private Sub Form_Load()
    
    mstrProvider = mstrAccessProvider351
    'set the default provider as Access 97.
    
    cmdGenerate.Enabled = False
    'Cannot generate code until a db is selected.
    
    cmdEditSQL.Enabled = False
    'Cannot change source until a db is selected.
    
End Sub

Private Sub lstFields_Click()
        
    mstrFieldName = lstFields.List(lstFields.ListIndex)
End Sub

Private Sub LstTables_Click()
    
    Dim intLoop, intLen     As Integer
    Dim strHoldTableName    As String
    Dim strTemp             As String
    Dim strtest             As String
    
    lstFields.Clear
    'Clear the list.
    
    mstrTableName = "[" & lstTables.List(lstTables.ListIndex) & "]"
    'Get the name of the table selected.
    
    Set rsRecordset = New ADODB.Recordset
    Set rsRecordset = connConnection.Execute("Select * From [" & lstTables.List(lstTables.ListIndex) & "]", 1, 1)
    For intLoop = 0 To rsRecordset.Fields.Count - 1
        lstFields.AddItem rsRecordset.Fields(intLoop).Name
    Next
    'Get the names of all fields within the selected table.
    
    mstrTableName = Mid(mstrTableName, 2, Len(mstrTableName) - 2)
    strTemp = "rs" & mstrTableName
    intLoop = 1
    strHoldTableName = ""
    intLen = Len(strTemp) + 1
    Do Until intLoop = intLen
        intLoop = intLoop + 1
        strtest = Left(strTemp, 1)
        If strtest = " " Then
            strHoldTableName = strHoldTableName & "_"
        Else
            strHoldTableName = strHoldTableName & Left(strTemp, 1)
        End If
        strTemp = Right(strTemp, Len(strTemp) - 1)
    Loop
    'Generate the name of the table for the code.
    
    mstrRecordSetObject = strHoldTableName
    mstrTableName = "[" & mstrTableName & "]"
    
    mstrSQL = "SELECT * FROM " & mstrTableName
    txtSQL.Text = mstrSQL
    'Generate the SQL Source string.
    
    If lstTables.ListIndex <> -1 Then
        cmdEditSQL.Enabled = True
        cmdGenerate.Enabled = True
    Else
        cmdEditSQL.Enabled = False
        cmdGenerate.Enabled = True
    End If
    'Decide wether the user opened a database and selected a table
    'or not.
        
    optProvider(0).Enabled = False
    optProvider(1).Enabled = False
    'Don't allow the user to change providers until clear is selected.
End Sub

Private Sub mnuFileExit_Click()
    
    Call cmdExit_Click
End Sub

Private Sub mnuHelpAbout_Click()
    
    frmAbout.Show
End Sub

Private Sub optProvider_Click(Index As Integer)
    
    Select Case Index
        Case 0
            mstrProvider = mstrAccessProvider351
        Case 1
            mstrProvider = mstrAccessProvider40
    End Select
End Sub
